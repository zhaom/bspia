package com.meidusa.demo.dal;

import com.meidusa.demo.dal.model.Examination;
import com.meidusa.demo.dal.model.ExaminationExample;
import java.util.List;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class ExaminationDAOImpl extends SqlMapClientDaoSupport implements ExaminationDAO {

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table examination
     *
     * @ibatorgenerated Sun Jun 20 22:44:16 CST 2010
     */
    public ExaminationDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table examination
     *
     * @ibatorgenerated Sun Jun 20 22:44:16 CST 2010
     */
    public int countByExample(ExaminationExample example) {
        Integer count = (Integer)  getSqlMapClientTemplate().queryForObject("examination.countByExample", example);
        return count;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table examination
     *
     * @ibatorgenerated Sun Jun 20 22:44:16 CST 2010
     */
    public int deleteByExample(ExaminationExample example) {
        int rows = getSqlMapClientTemplate().delete("examination.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table examination
     *
     * @ibatorgenerated Sun Jun 20 22:44:16 CST 2010
     */
    public int deleteByPrimaryKey(String id) {
        Examination key = new Examination();
        key.setId(id);
        int rows = getSqlMapClientTemplate().delete("examination.deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table examination
     *
     * @ibatorgenerated Sun Jun 20 22:44:16 CST 2010
     */
    public void insert(Examination record) {
        getSqlMapClientTemplate().insert("examination.insert", record);
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table examination
     *
     * @ibatorgenerated Sun Jun 20 22:44:16 CST 2010
     */
    public void insertSelective(Examination record) {
        getSqlMapClientTemplate().insert("examination.insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table examination
     *
     * @ibatorgenerated Sun Jun 20 22:44:16 CST 2010
     */
    @SuppressWarnings("unchecked")
    public List<Examination> selectByExample(ExaminationExample example) {
        List<Examination> list = getSqlMapClientTemplate().queryForList("examination.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table examination
     *
     * @ibatorgenerated Sun Jun 20 22:44:16 CST 2010
     */
    public Examination selectByPrimaryKey(String id) {
        Examination key = new Examination();
        key.setId(id);
        Examination record = (Examination) getSqlMapClientTemplate().queryForObject("examination.selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table examination
     *
     * @ibatorgenerated Sun Jun 20 22:44:16 CST 2010
     */
    public int updateByExampleSelective(Examination record, ExaminationExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("examination.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table examination
     *
     * @ibatorgenerated Sun Jun 20 22:44:16 CST 2010
     */
    public int updateByExample(Examination record, ExaminationExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("examination.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table examination
     *
     * @ibatorgenerated Sun Jun 20 22:44:16 CST 2010
     */
    public int updateByPrimaryKeySelective(Examination record) {
        int rows = getSqlMapClientTemplate().update("examination.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table examination
     *
     * @ibatorgenerated Sun Jun 20 22:44:16 CST 2010
     */
    public int updateByPrimaryKey(Examination record) {
        int rows = getSqlMapClientTemplate().update("examination.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by Apache iBATIS Ibator.
     * This class corresponds to the database table examination
     *
     * @ibatorgenerated Sun Jun 20 22:44:16 CST 2010
     */
    protected static class UpdateByExampleParms extends ExaminationExample {
        private Object record;

        public UpdateByExampleParms(Object record, ExaminationExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }

	@SuppressWarnings("unchecked")
	public List<Examination> selectByExampleWithBLOBs(ExaminationExample example) {
        List<Examination> list = getSqlMapClientTemplate().queryForList("examination.selectByExample", example);
        return list;
	}

	@SuppressWarnings("unchecked")
	public List<Examination> selectByExampleWithoutBLOBs(ExaminationExample example) {
        List<Examination> list = getSqlMapClientTemplate().queryForList("examination.selectByExample", example);
        return list;
	}

	public int updateByExampleWithBLOBs(Examination arg0,
			ExaminationExample arg1) {
		// TODO Auto-generated method stub
		return 0;
	}

	public int updateByExampleWithoutBLOBs(Examination arg0,
			ExaminationExample arg1) {
		// TODO Auto-generated method stub
		return 0;
	}

	public int updateByPrimaryKeyWithBLOBs(Examination arg0) {
		// TODO Auto-generated method stub
		return 0;
	}

	public int updateByPrimaryKeyWithoutBLOBs(Examination arg0) {
		// TODO Auto-generated method stub
		return 0;
	}
}