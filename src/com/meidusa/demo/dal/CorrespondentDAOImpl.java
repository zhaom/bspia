package com.meidusa.demo.dal;

import com.meidusa.demo.dal.model.Correspondent;
import com.meidusa.demo.dal.model.CorrespondentExample;
import java.util.List;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class CorrespondentDAOImpl extends SqlMapClientDaoSupport implements CorrespondentDAO {

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table correspondent
     *
     * @ibatorgenerated Sat Jul 10 12:07:53 CST 2010
     */
    public CorrespondentDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table correspondent
     *
     * @ibatorgenerated Sat Jul 10 12:07:53 CST 2010
     */
    public int countByExample(CorrespondentExample example) {
        Integer count = (Integer)  getSqlMapClientTemplate().queryForObject("correspondent.countByExample", example);
        return count;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table correspondent
     *
     * @ibatorgenerated Sat Jul 10 12:07:53 CST 2010
     */
    public int deleteByExample(CorrespondentExample example) {
        int rows = getSqlMapClientTemplate().delete("correspondent.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table correspondent
     *
     * @ibatorgenerated Sat Jul 10 12:07:53 CST 2010
     */
    public int deleteByPrimaryKey(String id) {
        Correspondent key = new Correspondent();
        key.setId(id);
        int rows = getSqlMapClientTemplate().delete("correspondent.deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table correspondent
     *
     * @ibatorgenerated Sat Jul 10 12:07:53 CST 2010
     */
    public void insert(Correspondent record) {
        getSqlMapClientTemplate().insert("correspondent.insert", record);
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table correspondent
     *
     * @ibatorgenerated Sat Jul 10 12:07:53 CST 2010
     */
    public void insertSelective(Correspondent record) {
        getSqlMapClientTemplate().insert("correspondent.insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table correspondent
     *
     * @ibatorgenerated Sat Jul 10 12:07:53 CST 2010
     */
    @SuppressWarnings("unchecked")
    public List<Correspondent> selectByExampleWithBLOBs(CorrespondentExample example) {
        //List<Correspondent> list = getSqlMapClientTemplate().queryForList("correspondent.selectByExampleWithBLOBs", example);
    	List<Correspondent> list = getSqlMapClientTemplate().queryForList("correspondent.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table correspondent
     *
     * @ibatorgenerated Sat Jul 10 12:07:53 CST 2010
     */
    @SuppressWarnings("unchecked")
    public List<Correspondent> selectByExampleWithoutBLOBs(CorrespondentExample example) {
        List<Correspondent> list = getSqlMapClientTemplate().queryForList("correspondent.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table correspondent
     *
     * @ibatorgenerated Sat Jul 10 12:07:53 CST 2010
     */
    public Correspondent selectByPrimaryKey(String id) {
        Correspondent key = new Correspondent();
        key.setId(id);
        Correspondent record = (Correspondent) getSqlMapClientTemplate().queryForObject("correspondent.selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table correspondent
     *
     * @ibatorgenerated Sat Jul 10 12:07:53 CST 2010
     */
    public int updateByExampleSelective(Correspondent record, CorrespondentExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("correspondent.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table correspondent
     *
     * @ibatorgenerated Sat Jul 10 12:07:53 CST 2010
     */
    public int updateByExampleWithBLOBs(Correspondent record, CorrespondentExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("correspondent.updateByExampleWithBLOBs", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table correspondent
     *
     * @ibatorgenerated Sat Jul 10 12:07:53 CST 2010
     */
    public int updateByExampleWithoutBLOBs(Correspondent record, CorrespondentExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("correspondent.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table correspondent
     *
     * @ibatorgenerated Sat Jul 10 12:07:53 CST 2010
     */
    public int updateByPrimaryKeySelective(Correspondent record) {
        int rows = getSqlMapClientTemplate().update("correspondent.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table correspondent
     *
     * @ibatorgenerated Sat Jul 10 12:07:53 CST 2010
     */
    public int updateByPrimaryKeyWithBLOBs(Correspondent record) {
        int rows = getSqlMapClientTemplate().update("correspondent.updateByPrimaryKeyWithBLOBs", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table correspondent
     *
     * @ibatorgenerated Sat Jul 10 12:07:53 CST 2010
     */
    public int updateByPrimaryKeyWithoutBLOBs(Correspondent record) {
        int rows = getSqlMapClientTemplate().update("correspondent.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by Apache iBATIS Ibator.
     * This class corresponds to the database table correspondent
     *
     * @ibatorgenerated Sat Jul 10 12:07:53 CST 2010
     */
    protected static class UpdateByExampleParms extends CorrespondentExample {
        private Object record;

        public UpdateByExampleParms(Object record, CorrespondentExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}