package com.meidusa.demo.dal;

import com.meidusa.demo.dal.model.ExcellentSelection;
import com.meidusa.demo.dal.model.ExcellentSelectionExample;
import com.meidusa.demo.dal.model.ExcellentSelectionWithBLOBs;
import java.util.List;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class ExcellentSelectionDAOImpl extends SqlMapClientDaoSupport implements ExcellentSelectionDAO {

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table excellentselection
     *
     * @ibatorgenerated Sun Jun 27 08:14:47 CST 2010
     */
    public ExcellentSelectionDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table excellentselection
     *
     * @ibatorgenerated Sun Jun 27 08:14:47 CST 2010
     */
    public int countByExample(ExcellentSelectionExample example) {
        Integer count = (Integer)  getSqlMapClientTemplate().queryForObject("excellentselection.countByExample", example);
        return count;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table excellentselection
     *
     * @ibatorgenerated Sun Jun 27 08:14:47 CST 2010
     */
    public int deleteByExample(ExcellentSelectionExample example) {
        int rows = getSqlMapClientTemplate().delete("excellentselection.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table excellentselection
     *
     * @ibatorgenerated Sun Jun 27 08:14:47 CST 2010
     */
    public int deleteByPrimaryKey(String id) {
        ExcellentSelection key = new ExcellentSelection();
        key.setId(id);
        int rows = getSqlMapClientTemplate().delete("excellentselection.deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table excellentselection
     *
     * @ibatorgenerated Sun Jun 27 08:14:47 CST 2010
     */
    public void insert(ExcellentSelectionWithBLOBs record) {
        getSqlMapClientTemplate().insert("excellentselection.insert", record);
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table excellentselection
     *
     * @ibatorgenerated Sun Jun 27 08:14:47 CST 2010
     */
    public void insertSelective(ExcellentSelectionWithBLOBs record) {
        getSqlMapClientTemplate().insert("excellentselection.insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table excellentselection
     *
     * @ibatorgenerated Sun Jun 27 08:14:47 CST 2010
     */
    @SuppressWarnings("unchecked")
    public List<ExcellentSelectionWithBLOBs> selectByExampleWithBLOBs(ExcellentSelectionExample example) {
        List<ExcellentSelectionWithBLOBs> list = getSqlMapClientTemplate().queryForList("excellentselection.selectByExampleWithBLOBs", example);
        return list;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table excellentselection
     *
     * @ibatorgenerated Sun Jun 27 08:14:47 CST 2010
     */
    @SuppressWarnings("unchecked")
    public List<ExcellentSelectionWithBLOBs> selectByExampleWithoutBLOBs(ExcellentSelectionExample example) {
        List<ExcellentSelectionWithBLOBs> list = getSqlMapClientTemplate().queryForList("excellentselection.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table excellentselection
     *
     * @ibatorgenerated Sun Jun 27 08:14:47 CST 2010
     */
    public ExcellentSelectionWithBLOBs selectByPrimaryKey(String id) {
        ExcellentSelection key = new ExcellentSelection();
        key.setId(id);
        ExcellentSelectionWithBLOBs record = (ExcellentSelectionWithBLOBs) getSqlMapClientTemplate().queryForObject("excellentselection.selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table excellentselection
     *
     * @ibatorgenerated Sun Jun 27 08:14:47 CST 2010
     */
    public int updateByExampleSelective(ExcellentSelectionWithBLOBs record, ExcellentSelectionExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("excellentselection.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table excellentselection
     *
     * @ibatorgenerated Sun Jun 27 08:14:47 CST 2010
     */
    public int updateByExample(ExcellentSelectionWithBLOBs record, ExcellentSelectionExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("excellentselection.updateByExampleWithBLOBs", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table excellentselection
     *
     * @ibatorgenerated Sun Jun 27 08:14:47 CST 2010
     */
    public int updateByExample(ExcellentSelection record, ExcellentSelectionExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("excellentselection.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table excellentselection
     *
     * @ibatorgenerated Sun Jun 27 08:14:47 CST 2010
     */
    public int updateByPrimaryKeySelective(ExcellentSelectionWithBLOBs record) {
        int rows = getSqlMapClientTemplate().update("excellentselection.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table excellentselection
     *
     * @ibatorgenerated Sun Jun 27 08:14:47 CST 2010
     */
    public int updateByPrimaryKey(ExcellentSelectionWithBLOBs record) {
        int rows = getSqlMapClientTemplate().update("excellentselection.updateByPrimaryKeyWithBLOBs", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table excellentselection
     *
     * @ibatorgenerated Sun Jun 27 08:14:47 CST 2010
     */
    public int updateByPrimaryKey(ExcellentSelection record) {
        int rows = getSqlMapClientTemplate().update("excellentselection.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by Apache iBATIS Ibator.
     * This class corresponds to the database table excellentselection
     *
     * @ibatorgenerated Sun Jun 27 08:14:47 CST 2010
     */
    protected static class UpdateByExampleParms extends ExcellentSelectionExample {
        private Object record;

        public UpdateByExampleParms(Object record, ExcellentSelectionExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }

	public int updateByExampleWithBLOBs(ExcellentSelectionWithBLOBs arg0,
			ExcellentSelectionExample arg1) {
		// TODO Auto-generated method stub
		return 0;
	}

	public int updateByExampleWithoutBLOBs(ExcellentSelectionWithBLOBs arg0,
			ExcellentSelectionExample arg1) {
		// TODO Auto-generated method stub
		return 0;
	}

	public int updateByPrimaryKeyWithBLOBs(ExcellentSelectionWithBLOBs arg0) {
		// TODO Auto-generated method stub
		return 0;
	}

	public int updateByPrimaryKeyWithoutBLOBs(ExcellentSelectionWithBLOBs arg0) {
		// TODO Auto-generated method stub
		return 0;
	}
}