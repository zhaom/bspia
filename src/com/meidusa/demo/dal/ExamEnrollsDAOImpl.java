package com.meidusa.demo.dal;

import java.util.List;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import com.meidusa.demo.dal.model.ExamEnrolls;
import com.meidusa.demo.dal.model.ExamEnrollsExample;

public class ExamEnrollsDAOImpl extends SqlMapClientDaoSupport implements ExamEnrollsDAO {

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table examenrolls
     *
     * @ibatorgenerated Wed May 05 21:15:00 CST 2010
     */
    public ExamEnrollsDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table examenrolls
     *
     * @ibatorgenerated Wed May 05 21:15:00 CST 2010
     */
    public int countByExample(ExamEnrollsExample example) {
        Integer count = (Integer)  getSqlMapClientTemplate().queryForObject("examenrolls.countByExample", example);
        return count;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table examenrolls
     *
     * @ibatorgenerated Wed May 05 21:15:00 CST 2010
     */
    public int deleteByExample(ExamEnrollsExample example) {
        int rows = getSqlMapClientTemplate().delete("examenrolls.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table examenrolls
     *
     * @ibatorgenerated Wed May 05 21:15:00 CST 2010
     */
    public int deleteByPrimaryKey(String id) {
        ExamEnrolls key = new ExamEnrolls();
        key.setId(id);
        int rows = getSqlMapClientTemplate().delete("examenrolls.deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table examenrolls
     *
     * @ibatorgenerated Wed May 05 21:15:00 CST 2010
     */
    public void insert(ExamEnrolls record) {
        getSqlMapClientTemplate().insert("examenrolls.insert", record);
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table examenrolls
     *
     * @ibatorgenerated Wed May 05 21:15:00 CST 2010
     */
    public void insertSelective(ExamEnrolls record) {
        getSqlMapClientTemplate().insert("examenrolls.insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table examenrolls
     *
     * @ibatorgenerated Wed May 05 21:15:00 CST 2010
     */
    @SuppressWarnings("unchecked")
    public List<ExamEnrolls> selectByExample(ExamEnrollsExample example) {
        List<ExamEnrolls> list = getSqlMapClientTemplate().queryForList("examenrolls.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table examenrolls
     *
     * @ibatorgenerated Wed May 05 21:15:01 CST 2010
     */
    public ExamEnrolls selectByPrimaryKey(String id) {
        ExamEnrolls key = new ExamEnrolls();
        key.setId(id);
        ExamEnrolls record = (ExamEnrolls) getSqlMapClientTemplate().queryForObject("examenrolls.selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table examenrolls
     *
     * @ibatorgenerated Wed May 05 21:15:01 CST 2010
     */
    public int updateByExampleSelective(ExamEnrolls record, ExamEnrollsExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("examenrolls.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table examenrolls
     *
     * @ibatorgenerated Wed May 05 21:15:01 CST 2010
     */
    public int updateByExample(ExamEnrolls record, ExamEnrollsExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("examenrolls.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table examenrolls
     *
     * @ibatorgenerated Wed May 05 21:15:01 CST 2010
     */
    public int updateByPrimaryKeySelective(ExamEnrolls record) {
        int rows = getSqlMapClientTemplate().update("examenrolls.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table examenrolls
     *
     * @ibatorgenerated Wed May 05 21:15:01 CST 2010
     */
    public int updateByPrimaryKey(ExamEnrolls record) {
        int rows = getSqlMapClientTemplate().update("examenrolls.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by Apache iBATIS Ibator.
     * This class corresponds to the database table examenrolls
     *
     * @ibatorgenerated Wed May 05 21:15:01 CST 2010
     */
    protected static class UpdateByExampleParms extends ExamEnrollsExample {
        private Object record;

        public UpdateByExampleParms(Object record, ExamEnrollsExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }

	@SuppressWarnings("unchecked")
	public List<ExamEnrolls> selectByExampleWithBLOBs(ExamEnrollsExample example) {
        List<ExamEnrolls> list = getSqlMapClientTemplate().queryForList("examenrolls.selectByExample", example);
        return list;
	}

	@SuppressWarnings("unchecked")
	public List<ExamEnrolls> selectByExampleWithoutBLOBs(ExamEnrollsExample example) {
        List<ExamEnrolls> list = getSqlMapClientTemplate().queryForList("examenrolls.selectByExample", example);
        return list;
	}

	public int updateByExampleWithBLOBs(ExamEnrolls arg0,
			ExamEnrollsExample arg1) {
		// TODO Auto-generated method stub
		return 0;
	}

	public int updateByExampleWithoutBLOBs(ExamEnrolls arg0,
			ExamEnrollsExample arg1) {
		// TODO Auto-generated method stub
		return 0;
	}

	public int updateByPrimaryKeyWithBLOBs(ExamEnrolls arg0) {
		// TODO Auto-generated method stub
		return 0;
	}

	public int updateByPrimaryKeyWithoutBLOBs(ExamEnrolls arg0) {
		// TODO Auto-generated method stub
		return 0;
	}

	@SuppressWarnings("unchecked")
	public List<ExamEnrolls> statisticByAll(ExamEnrolls record) {
		List<ExamEnrolls> list = getSqlMapClientTemplate().queryForList(
				"examenrolls.statisticByAll", record);
		return list;
	}
}